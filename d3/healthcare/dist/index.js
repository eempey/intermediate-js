!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(r,i,function(n){return t[n]}.bind(null,i));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=5)}({4:function(t,n,e){},5:function(t,n,e){"use strict";function r(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);if(204!==t.status&&205!==t.status)return t.json()}e.r(n);var i=function(t,n){return fetch(t,n).then(r)};const o=(t,n)=>{let e;switch(n){case"United States":e="United States of America";break;case"Bolivia":e="Bolivia (Plurinational State of)";break;case"Brunei":e="Brunei Darussalam";break;case"Cape Verde":e="Cabo Verde";break;case"Cote d'Ivoire":e="CÃ´te d'Ivoire";break;case"Czech Republic":e="Czechia";break;case"Democratic Republic of Congo":e="Democratic Republic of the Congo";break;case"Iran":e="Iran (Islamic Republic of)";break;case"Laos":e="Lao People's Democratic Republic";break;case"South Korea":e="Republic of Korea";break;case"Moldova":e="Republic of Moldova";break;case"Russia":e="Russian Federation";break;case"Syria":e="Syrian Arab Republic";break;case"Timor":e="Timor-Leste";break;case"United Kingdom":e="United Kingdom of Great Britain and Northern Ireland";break;case"Tanzania":e="United Republic of Tanzania";break;case"Venezuela":e="Venezuela (Bolivarian Republic of)";break;case"Vietnam":e="Viet Nam";break;default:e=n}return t.find(t=>t.dims.COUNTRY===e&&"2017"===t.dims.YEAR)};var u=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},a=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return u(n(t),e)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var c=a(u),l=c.right,s=(c.left,l);var f=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},h=Array.prototype,g=(h.slice,h.map,Math.sqrt(50)),p=Math.sqrt(10),d=Math.sqrt(2),m=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=v(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function v(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=g?10:o>=p?5:o>=d?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=g?10:o>=p?5:o>=d?2:1)}function y(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),o=r/i;return o>=g?i*=10:o>=p?i*=5:o>=d&&(i*=2),n<t?-i:i}function w(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}function b(){}function M(t,n){var e=new b;if(t instanceof b)t.each((function(t,n){e.set(n,t)}));else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}b.prototype=M.prototype={constructor:b,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var x=M;function _(){}var C=x.prototype;function T(t,n){var e=new _;if(t instanceof _)t.each((function(t){e.add(t)}));else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}_.prototype=T.prototype={constructor:_,has:C.has,add:function(t){return this["$"+(t+="")]=t,this},remove:C.remove,clear:C.clear,values:C.keys,size:C.size,empty:C.empty,each:C.each};var k=Array.prototype,A=k.map,U=k.slice;var N=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function S(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function D(){}var F="\\s*([+-]?\\d+)\\s*",H="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",P="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Y=/^#([0-9a-f]{3,8})$/,E=new RegExp("^rgb\\("+[F,F,F]+"\\)$"),L=new RegExp("^rgb\\("+[P,P,P]+"\\)$"),O=new RegExp("^rgba\\("+[F,F,F,H]+"\\)$"),j=new RegExp("^rgba\\("+[P,P,P,H]+"\\)$"),z=new RegExp("^hsl\\("+[H,P,P]+"\\)$"),R=new RegExp("^hsla\\("+[H,P,P,H]+"\\)$"),V={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function $(){return this.rgb().formatHex()}function q(){return this.rgb().formatRgb()}function I(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=Y.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?B(n):3===e?new J(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?Z(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?Z(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=E.exec(t))?new J(n[1],n[2],n[3],1):(n=L.exec(t))?new J(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=O.exec(t))?Z(n[1],n[2],n[3],n[4]):(n=j.exec(t))?Z(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=z.exec(t))?tt(n[1],n[2]/100,n[3]/100,1):(n=R.exec(t))?tt(n[1],n[2]/100,n[3]/100,n[4]):V.hasOwnProperty(t)?B(V[t]):"transparent"===t?new J(NaN,NaN,NaN,0):null}function B(t){return new J(t>>16&255,t>>8&255,255&t,1)}function Z(t,n,e,r){return r<=0&&(t=n=e=NaN),new J(t,n,e,r)}function W(t){return t instanceof D||(t=I(t)),t?new J((t=t.rgb()).r,t.g,t.b,t.opacity):new J}function X(t,n,e,r){return 1===arguments.length?W(t):new J(t,n,e,null==r?1:r)}function J(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function Q(){return"#"+G(this.r)+G(this.g)+G(this.b)}function K(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}function G(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function tt(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new et(t,n,e,r)}function nt(t){if(t instanceof et)return new et(t.h,t.s,t.l,t.opacity);if(t instanceof D||(t=I(t)),!t)return new et;if(t instanceof et)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new et(u,a,c,t.opacity)}function et(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function rt(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}function it(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}N(D,I,{copy:function(t){return Object.assign(new this.constructor,this,t)},displayable:function(){return this.rgb().displayable()},hex:$,formatHex:$,formatHsl:function(){return nt(this).formatHsl()},formatRgb:q,toString:q}),N(J,X,S(D,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new J(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new J(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Q,formatHex:Q,formatRgb:K,toString:K})),N(et,(function(t,n,e,r){return 1===arguments.length?nt(t):new et(t,n,e,null==r?1:r)}),S(D,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new et(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new et(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new J(rt(t>=240?t-240:t+120,i,r),rt(t,i,r),rt(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"hsl(":"hsla(")+(this.h||0)+", "+100*(this.s||0)+"%, "+100*(this.l||0)+"%"+(1===t?")":", "+t+")")}}));var ot=function(t){return function(){return t}};function ut(t,n){return function(e){return t+e*n}}function at(t){return 1==(t=+t)?ct:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):ot(isNaN(n)?e:n)}}function ct(t,n){var e=n-t;return e?ut(t,e):ot(isNaN(t)?n:t)}var lt=function t(n){var e=at(n);function r(t,n){var r=e((t=X(t)).r,(n=X(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=ct(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}return r.gamma=t,r}(1);function st(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=X(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}st((function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return it((e-r/n)*n,u,i,o,a)}})),st((function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return it((e-r/n)*n,i,o,u,a)}}));var ft=function(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(o){for(e=0;e<r;++e)i[e]=t[e]*(1-o)+n[e]*o;return i}};function ht(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function gt(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=bt(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}}var pt=function(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}},dt=function(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}},mt=function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=bt(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},vt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,yt=new RegExp(vt.source,"g");var wt=function(t,n){var e,r,i,o=vt.lastIndex=yt.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=vt.exec(t))&&(r=yt.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:dt(e,r)})),o=yt.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},bt=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?ot(n):("number"===r?dt:"string"===r?(e=I(n))?(n=e,lt):wt:n instanceof I?lt:n instanceof Date?pt:ht(n)?ft:Array.isArray(n)?gt:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?mt:dt)(t,n)},Mt=function(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}},xt=function(t){return+t},_t=[0,1];function Ct(t){return t}function Tt(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:(e=isNaN(n)?NaN:.5,function(){return e});var e}function kt(t){var n,e=t[0],r=t[t.length-1];return e>r&&(n=e,e=r,r=n),function(t){return Math.max(e,Math.min(r,t))}}function At(t,n,e){var r=t[0],i=t[1],o=n[0],u=n[1];return i<r?(r=Tt(i,r),o=e(u,o)):(r=Tt(r,i),o=e(o,u)),function(t){return o(r(t))}}function Ut(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),o=new Array(r),u=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++u<r;)i[u]=Tt(t[u],t[u+1]),o[u]=e(n[u],n[u+1]);return function(n){var e=s(t,n,1,r)-1;return o[e](i[e](n))}}function Nt(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function St(){var t,n,e,r,i,o,u=_t,a=_t,c=bt,l=Ct;function s(){return r=Math.min(u.length,a.length)>2?Ut:At,i=o=null,f}function f(n){return isNaN(n=+n)?e:(i||(i=r(u.map(t),a,c)))(t(l(n)))}return f.invert=function(e){return l(n((o||(o=r(a,u.map(t),dt)))(e)))},f.domain=function(t){return arguments.length?(u=A.call(t,xt),l===Ct||(l=kt(u)),s()):u.slice()},f.range=function(t){return arguments.length?(a=U.call(t),s()):a.slice()},f.rangeRound=function(t){return a=U.call(t),c=Mt,s()},f.clamp=function(t){return arguments.length?(l=t?kt(u):Ct,f):l!==Ct},f.interpolate=function(t){return arguments.length?(c=t,s()):c},f.unknown=function(t){return arguments.length?(e=t,f):e},function(e,r){return t=e,n=r,s()}}function Dt(t,n){return St()(t,n)}var Ft=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Ht(t){if(!(n=Ft.exec(t)))throw new Error("invalid format: "+t);var n;return new Pt({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function Pt(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}Ht.prototype=Pt.prototype,Pt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Yt,Et,Lt,Ot,jt=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},zt=function(t){return(t=jt(Math.abs(t)))?t[1]:NaN},Rt=function(t,n){var e=jt(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},Vt={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Rt(100*t,n)},r:Rt,s:function(t,n){var e=jt(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(Yt=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+jt(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},$t=function(t){return t},qt=Array.prototype.map,It=["y","z","a","f","p","n","Âµ","m","","k","M","G","T","P","E","Z","Y"];Et=function(t){var n,e,r=void 0===t.grouping||void 0===t.thousands?$t:(n=qt.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,o=[],u=0,a=n[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(t.substring(i-=a,i+a)),!((c+=a+1)>r));)a=n[u=(u+1)%n.length];return o.reverse().join(e)}),i=void 0===t.currency?"":t.currency[0]+"",o=void 0===t.currency?"":t.currency[1]+"",u=void 0===t.decimal?".":t.decimal+"",a=void 0===t.numerals?$t:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(qt.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",l=void 0===t.minus?"-":t.minus+"",s=void 0===t.nan?"NaN":t.nan+"";function f(t){var n=(t=Ht(t)).fill,e=t.align,f=t.sign,h=t.symbol,g=t.zero,p=t.width,d=t.comma,m=t.precision,v=t.trim,y=t.type;"n"===y?(d=!0,y="g"):Vt[y]||(void 0===m&&(m=12),v=!0,y="g"),(g||"0"===n&&"="===e)&&(g=!0,n="0",e="=");var w="$"===h?i:"#"===h&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",b="$"===h?o:/[%p]/.test(y)?c:"",M=Vt[y],x=/[defgprs%]/.test(y);function _(t){var i,o,c,h=w,_=b;if("c"===y)_=M(t)+_,t="";else{var C=(t=+t)<0||1/t<0;if(t=isNaN(t)?s:M(Math.abs(t),m),v&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),C&&0==+t&&"+"!==f&&(C=!1),h=(C?"("===f?f:l:"-"===f||"("===f?"":f)+h,_=("s"===y?It[8+Yt/3]:"")+_+(C&&"("===f?")":""),x)for(i=-1,o=t.length;++i<o;)if(48>(c=t.charCodeAt(i))||c>57){_=(46===c?u+t.slice(i+1):t.slice(i))+_,t=t.slice(0,i);break}}d&&!g&&(t=r(t,1/0));var T=h.length+t.length+_.length,k=T<p?new Array(p-T+1).join(n):"";switch(d&&g&&(t=r(k+t,k.length?p-_.length:1/0),k=""),e){case"<":t=h+t+_+k;break;case"=":t=h+k+t+_;break;case"^":t=k.slice(0,T=k.length>>1)+h+t+_+k.slice(T);break;default:t=k+h+t+_}return a(t)}return m=void 0===m?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,m)):Math.max(0,Math.min(20,m)),_.toString=function(){return t+""},_}return{format:f,formatPrefix:function(t,n){var e=f(((t=Ht(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(zt(n)/3))),i=Math.pow(10,-r),o=It[8+r/3];return function(t){return e(i*t)+o}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""],minus:"-"}),Lt=Et.format,Ot=Et.formatPrefix;var Bt=function(t,n,e,r){var i,o=y(t,n,e);switch((r=Ht(null==r?",f":r)).type){case"s":var u=Math.max(Math.abs(t),Math.abs(n));return null!=r.precision||isNaN(i=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(zt(n)/3)))-zt(Math.abs(t)))}(o,u))||(r.precision=i),Ot(r,u);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(i=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,zt(n)-zt(t))+1}(o,Math.max(Math.abs(t),Math.abs(n))))||(r.precision=i-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(i=function(t){return Math.max(0,-zt(Math.abs(t)))}(o))||(r.precision=i-2*("%"===r.type))}return Lt(r)};function Zt(t){var n=t.domain;return t.ticks=function(t){var e=n();return m(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return Bt(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),o=0,u=i.length-1,a=i[o],c=i[u];return c<a&&(r=a,a=c,c=r,r=o,o=u,u=r),(r=v(a,c,e))>0?r=v(a=Math.floor(a/r)*r,c=Math.ceil(c/r)*r,e):r<0&&(r=v(a=Math.ceil(a*r)/r,c=Math.floor(c*r)/r,e)),r>0?(i[o]=Math.floor(a/r)*r,i[u]=Math.ceil(c/r)*r,n(i)):r<0&&(i[o]=Math.ceil(a*r)/r,i[u]=Math.floor(c*r)/r,n(i)),t},t}function Wt(){var t=Dt(Ct,Ct);return t.copy=function(){return Nt(t,Wt())},w.apply(t,arguments),Zt(t)}var Xt=new Date,Jt=new Date;function Qt(t,n,e,r){function i(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return i.floor=function(n){return t(n=new Date(+n)),n},i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return Qt((function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)}),(function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););}))},e&&(i.count=function(n,r){return Xt.setTime(+n),Jt.setTime(+r),t(Xt),t(Jt),Math.floor(e(Xt,Jt))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Kt=Qt((function(t){t.setMonth(0,1),t.setHours(0,0,0,0)}),(function(t,n){t.setFullYear(t.getFullYear()+n)}),(function(t,n){return n.getFullYear()-t.getFullYear()}),(function(t){return t.getFullYear()}));Kt.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qt((function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)}),(function(n,e){n.setFullYear(n.getFullYear()+e*t)})):null};var Gt=Kt,tn=(Kt.range,Qt((function(t){t.setDate(1),t.setHours(0,0,0,0)}),(function(t,n){t.setMonth(t.getMonth()+n)}),(function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())}),(function(t){return t.getMonth()})));tn.range;function nn(t){return Qt((function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+7*n)}),(function(t,n){return(n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/6048e5}))}var en=nn(0),rn=nn(1),on=nn(2),un=nn(3),an=nn(4),cn=nn(5),ln=nn(6),sn=(en.range,rn.range,on.range,un.range,an.range,cn.range,ln.range,Qt((function(t){t.setHours(0,0,0,0)}),(function(t,n){t.setDate(t.getDate()+n)}),(function(t,n){return(n-t-6e4*(n.getTimezoneOffset()-t.getTimezoneOffset()))/864e5}),(function(t){return t.getDate()-1}))),fn=sn,hn=(sn.range,Qt((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds()-6e4*t.getMinutes())}),(function(t,n){t.setTime(+t+36e5*n)}),(function(t,n){return(n-t)/36e5}),(function(t){return t.getHours()}))),gn=(hn.range,Qt((function(t){t.setTime(t-t.getMilliseconds()-1e3*t.getSeconds())}),(function(t,n){t.setTime(+t+6e4*n)}),(function(t,n){return(n-t)/6e4}),(function(t){return t.getMinutes()}))),pn=(gn.range,Qt((function(t){t.setTime(t-t.getMilliseconds())}),(function(t,n){t.setTime(+t+1e3*n)}),(function(t,n){return(n-t)/1e3}),(function(t){return t.getUTCSeconds()}))),dn=(pn.range,Qt((function(){}),(function(t,n){t.setTime(+t+n)}),(function(t,n){return n-t})));dn.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Qt((function(n){n.setTime(Math.floor(n/t)*t)}),(function(n,e){n.setTime(+n+e*t)}),(function(n,e){return(e-n)/t})):dn:null};dn.range;function mn(t){return Qt((function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+7*n)}),(function(t,n){return(n-t)/6048e5}))}var vn=mn(0),yn=mn(1),wn=mn(2),bn=mn(3),Mn=mn(4),xn=mn(5),_n=mn(6),Cn=(vn.range,yn.range,wn.range,bn.range,Mn.range,xn.range,_n.range,Qt((function(t){t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCDate(t.getUTCDate()+n)}),(function(t,n){return(n-t)/864e5}),(function(t){return t.getUTCDate()-1}))),Tn=Cn,kn=(Cn.range,Qt((function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)}),(function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()}),(function(t){return t.getUTCFullYear()})));kn.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Qt((function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)}),(function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)})):null};var An=kn;kn.range;function Un(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Nn(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Sn(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}var Dn,Fn={"-":"",_:" ",0:"0"},Hn=/^\s*\d+/,Pn=/^%/,Yn=/[\\^$*+?|[\]().{}]/g;function En(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function Ln(t){return t.replace(Yn,"\\$&")}function On(t){return new RegExp("^(?:"+t.map(Ln).join("|")+")","i")}function jn(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function zn(t,n,e){var r=Hn.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Rn(t,n,e){var r=Hn.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Vn(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function $n(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function qn(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function In(t,n,e){var r=Hn.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Bn(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Zn(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Wn(t,n,e){var r=Hn.exec(n.slice(e,e+1));return r?(t.q=3*r[0]-3,e+r[0].length):-1}function Xn(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Jn(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Qn(t,n,e){var r=Hn.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Kn(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Gn(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function te(t,n,e){var r=Hn.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function ne(t,n,e){var r=Hn.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function ee(t,n,e){var r=Hn.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function re(t,n,e){var r=Pn.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function ie(t,n,e){var r=Hn.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function oe(t,n,e){var r=Hn.exec(n.slice(e));return r?(t.s=+r[0],e+r[0].length):-1}function ue(t,n){return En(t.getDate(),n,2)}function ae(t,n){return En(t.getHours(),n,2)}function ce(t,n){return En(t.getHours()%12||12,n,2)}function le(t,n){return En(1+fn.count(Gt(t),t),n,3)}function se(t,n){return En(t.getMilliseconds(),n,3)}function fe(t,n){return se(t,n)+"000"}function he(t,n){return En(t.getMonth()+1,n,2)}function ge(t,n){return En(t.getMinutes(),n,2)}function pe(t,n){return En(t.getSeconds(),n,2)}function de(t){var n=t.getDay();return 0===n?7:n}function me(t,n){return En(en.count(Gt(t)-1,t),n,2)}function ve(t,n){var e=t.getDay();return t=e>=4||0===e?an(t):an.ceil(t),En(an.count(Gt(t),t)+(4===Gt(t).getDay()),n,2)}function ye(t){return t.getDay()}function we(t,n){return En(rn.count(Gt(t)-1,t),n,2)}function be(t,n){return En(t.getFullYear()%100,n,2)}function Me(t,n){return En(t.getFullYear()%1e4,n,4)}function xe(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+En(n/60|0,"0",2)+En(n%60,"0",2)}function _e(t,n){return En(t.getUTCDate(),n,2)}function Ce(t,n){return En(t.getUTCHours(),n,2)}function Te(t,n){return En(t.getUTCHours()%12||12,n,2)}function ke(t,n){return En(1+Tn.count(An(t),t),n,3)}function Ae(t,n){return En(t.getUTCMilliseconds(),n,3)}function Ue(t,n){return Ae(t,n)+"000"}function Ne(t,n){return En(t.getUTCMonth()+1,n,2)}function Se(t,n){return En(t.getUTCMinutes(),n,2)}function De(t,n){return En(t.getUTCSeconds(),n,2)}function Fe(t){var n=t.getUTCDay();return 0===n?7:n}function He(t,n){return En(vn.count(An(t)-1,t),n,2)}function Pe(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Mn(t):Mn.ceil(t),En(Mn.count(An(t),t)+(4===An(t).getUTCDay()),n,2)}function Ye(t){return t.getUTCDay()}function Ee(t,n){return En(yn.count(An(t)-1,t),n,2)}function Le(t,n){return En(t.getUTCFullYear()%100,n,2)}function Oe(t,n){return En(t.getUTCFullYear()%1e4,n,4)}function je(){return"+0000"}function ze(){return"%"}function Re(t){return+t}function Ve(t){return Math.floor(+t/1e3)}!function(t){Dn=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,l=On(i),s=jn(i),f=On(o),h=jn(o),g=On(u),p=jn(u),d=On(a),m=jn(a),v=On(c),y=jn(c),w={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:ue,e:ue,f:fe,H:ae,I:ce,j:le,L:se,m:he,M:ge,p:function(t){return i[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:Re,s:Ve,S:pe,u:de,U:me,V:ve,w:ye,W:we,x:null,X:null,y:be,Y:Me,Z:xe,"%":ze},b={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:_e,e:_e,f:Ue,H:Ce,I:Te,j:ke,L:Ae,m:Ne,M:Se,p:function(t){return i[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:Re,s:Ve,S:De,u:Fe,U:He,V:Pe,w:Ye,W:Ee,x:null,X:null,y:Le,Y:Oe,Z:je,"%":ze},M={a:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=y[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.m=m[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return C(t,n,e,r)},d:Jn,e:Jn,f:ee,H:Kn,I:Kn,j:Qn,L:ne,m:Xn,M:Gn,p:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},q:Wn,Q:ie,s:oe,S:te,u:Rn,U:Vn,V:$n,w:zn,W:qn,x:function(t,n,r){return C(t,e,n,r)},X:function(t,n,e){return C(t,r,n,e)},y:Bn,Y:In,Z:Zn,"%":re};function x(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,l=t.length;for(e instanceof Date||(e=new Date(+e));++a<l;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=Fn[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function _(t,n){return function(e){var r,i,o=Sn(1900,void 0,1);if(C(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("s"in o)return new Date(1e3*o.s+("L"in o?o.L:0));if(n&&!("Z"in o)&&(o.Z=0),"p"in o&&(o.H=o.H%12+12*o.p),void 0===o.m&&(o.m="q"in o?o.q:0),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(i=(r=Nn(Sn(o.y,0,1))).getUTCDay(),r=i>4||0===i?yn.ceil(r):yn(r),r=Tn.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(i=(r=Un(Sn(o.y,0,1))).getDay(),r=i>4||0===i?rn.ceil(r):rn(r),r=fn.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?Nn(Sn(o.y,0,1)).getUTCDay():Un(Sn(o.y,0,1)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,Nn(o)):Un(o)}}function C(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=M[i in Fn?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return w.x=x(e,w),w.X=x(r,w),w.c=x(n,w),b.x=x(e,b),b.X=x(r,b),b.c=x(n,b),{format:function(t){var n=x(t+="",w);return n.toString=function(){return t},n},parse:function(t){var n=_(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=x(t+="",b);return n.toString=function(){return t},n},utcParse:function(t){var n=_(t+="",!0);return n.toString=function(){return t},n}}}(t),Dn.format,Dn.parse,Dn.utcFormat,Dn.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});var $e=Qt((function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),(function(t,n){t.setUTCMonth(t.getUTCMonth()+n)}),(function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())}),(function(t){return t.getUTCMonth()})),qe=($e.range,Qt((function(t){t.setUTCMinutes(0,0,0)}),(function(t,n){t.setTime(+t+36e5*n)}),(function(t,n){return(n-t)/36e5}),(function(t){return t.getUTCHours()}))),Ie=(qe.range,Qt((function(t){t.setUTCSeconds(0,0)}),(function(t,n){t.setTime(+t+6e4*n)}),(function(t,n){return(n-t)/6e4}),(function(t){return t.getUTCMinutes()})));Ie.range;var Be=Array.prototype.slice,Ze=function(t){return t};function We(t){return"translate("+(t+.5)+",0)"}function Xe(t){return"translate(0,"+(t+.5)+")"}function Je(t){return function(n){return+t(n)}}function Qe(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}function Ke(){return!this.__axis}function Ge(t,n){var e=[],r=null,i=null,o=6,u=6,a=3,c=1===t||4===t?-1:1,l=4===t||2===t?"x":"y",s=1===t||3===t?We:Xe;function f(f){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,g=null==i?n.tickFormat?n.tickFormat.apply(n,e):Ze:i,p=Math.max(o,0)+a,d=n.range(),m=+d[0]+.5,v=+d[d.length-1]+.5,y=(n.bandwidth?Qe:Je)(n.copy()),w=f.selection?f.selection():f,b=w.selectAll(".domain").data([null]),M=w.selectAll(".tick").data(h,n).order(),x=M.exit(),_=M.enter().append("g").attr("class","tick"),C=M.select("line"),T=M.select("text");b=b.merge(b.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),M=M.merge(_),C=C.merge(_.append("line").attr("stroke","currentColor").attr(l+"2",c*o)),T=T.merge(_.append("text").attr("fill","currentColor").attr(l,c*p).attr("dy",1===t?"0em":3===t?"0.71em":"0.32em")),f!==w&&(b=b.transition(f),M=M.transition(f),C=C.transition(f),T=T.transition(f),x=x.transition(f).attr("opacity",1e-6).attr("transform",(function(t){return isFinite(t=y(t))?s(t):this.getAttribute("transform")})),_.attr("opacity",1e-6).attr("transform",(function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:y(t))}))),x.remove(),b.attr("d",4===t||2==t?u?"M"+c*u+","+m+"H0.5V"+v+"H"+c*u:"M0.5,"+m+"V"+v:u?"M"+m+","+c*u+"V0.5H"+v+"V"+c*u:"M"+m+",0.5H"+v),M.attr("opacity",1).attr("transform",(function(t){return s(y(t))})),C.attr(l+"2",c*o),T.attr(l,c*p).text(g),w.filter(Ke).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",2===t?"start":4===t?"end":"middle"),w.each((function(){this.__axis=y}))}return f.scale=function(t){return arguments.length?(n=t,f):n},f.ticks=function(){return e=Be.call(arguments),f},f.tickArguments=function(t){return arguments.length?(e=null==t?[]:Be.call(t),f):e.slice()},f.tickValues=function(t){return arguments.length?(r=null==t?null:Be.call(t),f):r&&r.slice()},f.tickFormat=function(t){return arguments.length?(i=t,f):i},f.tickSize=function(t){return arguments.length?(o=u=+t,f):o},f.tickSizeInner=function(t){return arguments.length?(o=+t,f):o},f.tickSizeOuter=function(t){return arguments.length?(u=+t,f):u},f.tickPadding=function(t){return arguments.length?(a=+t,f):a},f}function tr(){}var nr=function(t){return null==t?tr:function(){return this.querySelector(t)}};function er(){return[]}var rr=function(t){return new Array(t.length)};function ir(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}ir.prototype={constructor:ir,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};function or(t,n,e,r,i,o){for(var u,a=0,c=n.length,l=o.length;a<l;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new ir(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function ur(t,n,e,r,i,o,u){var a,c,l,s={},f=n.length,h=o.length,g=new Array(f);for(a=0;a<f;++a)(c=n[a])&&(g[a]=l="$"+u.call(c,c.__data__,a,n),l in s?i[a]=c:s[l]=c);for(a=0;a<h;++a)(c=s[l="$"+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],s[l]=null):e[a]=new ir(t,o[a]);for(a=0;a<f;++a)(c=n[a])&&s[g[a]]===c&&(i[a]=c)}function ar(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var cr="http://www.w3.org/1999/xhtml",lr={svg:"http://www.w3.org/2000/svg",xhtml:cr,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},sr=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),lr.hasOwnProperty(n)?{space:lr[n],local:t}:t};function fr(t){return function(){this.removeAttribute(t)}}function hr(t){return function(){this.removeAttributeNS(t.space,t.local)}}function gr(t,n){return function(){this.setAttribute(t,n)}}function pr(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function dr(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function mr(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}var vr=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function yr(t){return function(){this.style.removeProperty(t)}}function wr(t,n,e){return function(){this.style.setProperty(t,n,e)}}function br(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function Mr(t,n){return t.style.getPropertyValue(n)||vr(t).getComputedStyle(t,null).getPropertyValue(n)}function xr(t){return function(){delete this[t]}}function _r(t,n){return function(){this[t]=n}}function Cr(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function Tr(t){return t.trim().split(/^|\s+/)}function kr(t){return t.classList||new Ar(t)}function Ar(t){this._node=t,this._names=Tr(t.getAttribute("class")||"")}function Ur(t,n){for(var e=kr(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function Nr(t,n){for(var e=kr(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function Sr(t){return function(){Ur(this,t)}}function Dr(t){return function(){Nr(this,t)}}function Fr(t,n){return function(){(n.apply(this,arguments)?Ur:Nr)(this,t)}}Ar.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function Hr(){this.textContent=""}function Pr(t){return function(){this.textContent=t}}function Yr(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function Er(){this.innerHTML=""}function Lr(t){return function(){this.innerHTML=t}}function Or(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function jr(){this.nextSibling&&this.parentNode.appendChild(this)}function zr(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Rr(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===cr&&n.documentElement.namespaceURI===cr?n.createElement(t):n.createElementNS(e,t)}}function Vr(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}var $r=function(t){var n=sr(t);return(n.local?Vr:Rr)(n)};function qr(){return null}function Ir(){var t=this.parentNode;t&&t.removeChild(this)}function Br(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function Zr(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}var Wr={},Xr=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Wr={mouseenter:"mouseover",mouseleave:"mouseout"}));function Jr(t,n,e){return t=Qr(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Qr(t,n,e){return function(r){var i=Xr;Xr=r;try{t.call(this,this.__data__,n,e)}finally{Xr=i}}}function Kr(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}function Gr(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function ti(t,n,e){var r=Wr.hasOwnProperty(t.type)?Jr:Qr;return function(i,o,u){var a,c=this.__on,l=r(n,o,u);if(c)for(var s=0,f=c.length;s<f;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=l,a.capture=e),void(a.value=n);this.addEventListener(t.type,l,e),a={type:t.type,name:t.name,value:n,listener:l,capture:e},c?c.push(a):this.__on=[a]}}function ni(t,n,e){var r=vr(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function ei(t,n){return function(){return ni(this,t,n)}}function ri(t,n){return function(){return ni(this,t,n.apply(this,arguments))}}var ii=[null];function oi(t,n){this._groups=t,this._parents=n}function ui(){return new oi([[document.documentElement]],ii)}oi.prototype=ui.prototype={constructor:oi,select:function(t){"function"!=typeof t&&(t=nr(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,l=r[i]=new Array(c),s=0;s<c;++s)(o=a[s])&&(u=t.call(o,o.__data__,s,a))&&("__data__"in o&&(u.__data__=o.__data__),l[s]=u);return new oi(r,this._parents)},selectAll:function(t){var n;"function"!=typeof t&&(t=null==(n=t)?er:function(){return this.querySelectorAll(n)});for(var e=this._groups,r=e.length,i=[],o=[],u=0;u<r;++u)for(var a,c=e[u],l=c.length,s=0;s<l;++s)(a=c[s])&&(i.push(t.call(a,a.__data__,s,c)),o.push(a));return new oi(i,o)},filter:function(t){var n;"function"!=typeof t&&(n=t,t=function(){return this.matches(n)});for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o)for(var u,a=e[o],c=a.length,l=i[o]=[],s=0;s<c;++s)(u=a[s])&&t.call(u,u.__data__,s,a)&&l.push(u);return new oi(i,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),s=-1,this.each((function(t){p[++s]=t})),p;var e,r=n?ur:or,i=this._parents,o=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var u=o.length,a=new Array(u),c=new Array(u),l=new Array(u),s=0;s<u;++s){var f=i[s],h=o[s],g=h.length,p=t.call(f,f&&f.__data__,s,i),d=p.length,m=c[s]=new Array(d),v=a[s]=new Array(d);r(f,h,m,v,l[s]=new Array(g),p,n);for(var y,w,b=0,M=0;b<d;++b)if(y=m[b]){for(b>=M&&(M=b+1);!(w=v[M])&&++M<d;);y._next=w||null}}return(a=new oi(a,i))._enter=c,a._exit=l,a},enter:function(){return new oi(this._enter||this._groups.map(rr),this._parents)},exit:function(){return new oi(this._exit||this._groups.map(rr),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,o=this.exit();return r="function"==typeof t?t(r):r.append(t+""),null!=n&&(i=n(i)),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,l=n[a],s=e[a],f=l.length,h=u[a]=new Array(f),g=0;g<f;++g)(c=l[g]||s[g])&&(h[g]=c);for(;a<r;++a)u[a]=n[a];return new oi(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&4^r.compareDocumentPosition(u)&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=ar);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,l=i[o]=new Array(c),s=0;s<c;++s)(u=a[s])&&(l[s]=u);l.sort(n)}return new oi(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each((function(){t[++n]=this})),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each((function(){++t})),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=sr(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?hr:fr:"function"==typeof n?e.local?mr:dr:e.local?pr:gr)(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?yr:"function"==typeof n?br:wr)(t,n,null==e?"":e)):Mr(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?xr:"function"==typeof n?Cr:_r)(t,n)):this.node()[t]},classed:function(t,n){var e=Tr(t+"");if(arguments.length<2){for(var r=kr(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?Fr:n?Sr:Dr)(e,n))},text:function(t){return arguments.length?this.each(null==t?Hr:("function"==typeof t?Yr:Pr)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?Er:("function"==typeof t?Or:Lr)(t)):this.node().innerHTML},raise:function(){return this.each(jr)},lower:function(){return this.each(zr)},append:function(t){var n="function"==typeof t?t:$r(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))},insert:function(t,n){var e="function"==typeof t?t:$r(t),r=null==n?qr:"function"==typeof n?n:nr(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(Ir)},clone:function(t){return this.select(t?Zr:Br)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=Kr(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?ti:Gr,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,l=0,s=a.length;l<s;++l)for(r=0,c=a[l];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?ri:ei)(t,n))}};var ai=function(t){return"string"==typeof t?new oi([[document.querySelector(t)]],[document.documentElement]):new oi([[t]],ii)};e(4);const ci=ai("body").append("div").classed("tooltip",!0);function li(t){ci.style("opacity",1).style("left",Xr.x-ci.node().offsetWidth/2+"px").style("top",Xr.y+"px").html(`\n                <p>Country: ${t.location}</p>\n            `)}function si(t){ci.style("opacity",0)}function fi(t,n,e,r){ai("svg").selectAll("circle").data(t).enter().append("circle").attr("cx",t=>n(t.pCFunding)).attr("cy",t=>e(t.data.slice(-1)[0].total_deaths_per_million)).attr("r",5).attr("fill",t=>r(t.proportionOfPublicHealthcareFunding)).on("mousemove",li).on("touchstart",li).on("mouseout",si).on("touchend",si)}Promise.all([i("owid-covid-data.json"),i("percent-of-healthcare-that-is-publicly-funded.json"),i("privatePerCapitaHealthcareSpending.json"),i("publicPerCapitaHealthcareSpending.json")]).then((function([t,n,e,r]){const i=n.fact,u=e.fact,a=r.fact;return Object.entries(t).map(t=>{const n=t[1].location,e=o(i,n),r=o(a,n),c=o(u,n);return t[1].proportionOfPublicHealthcareFunding=e?parseFloat(e.Value):"",t[1].publicPCFunding=r?parseFloat(r.Value):"",t[1].privatePCFunding=c?parseFloat(c.Value):"",t[1].pCFunding=t[1].privatePCFunding+t[1].publicPCFunding,t[1]}).filter(t=>t.privatePCFunding&&t.publicPCFunding&&t.proportionOfPublicHealthcareFunding)})).then(t=>{console.log(t);const n=f(t,t=>t.data.slice(-1)[0].total_deaths_per_million),e=Wt().domain(n).range([570,30]),r=Wt().domain(f(t,t=>t.pCFunding)).range([30,1170]),i=(o=r,Ge(3,o)).tickSize(-540).tickSizeOuter(0);var o;const u=function(t){return Ge(4,t)}(e).tickSize(-1140).tickSizeOuter(0),a=Wt().domain(f(t,t=>t.proportionOfPublicHealthcareFunding)).range(["red","lightgreen"]);ai("svg").attr("height",600).attr("width",1200).append("g").attr("transform","translate(0,570)").call(i),ai("svg").append("g").attr("transform","translate(30,0)").call(u),fi(t,r,e,a),ai("#europeFilter").on("click",()=>{const n=t.filter(t=>"Europe"===t.continent);console.log(n),fi(n,r,e,a)})}).catch((function(t){console.log(t)}))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,